[{"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\index.js":"1","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\App.js":"2","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\reportWebVitals.js":"3","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\sidebar\\Sidebar.jsx":"4","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\Sidebar\\Sidebar.jsx":"5","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\Home\\Home.jsx":"6","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\Employee\\Employee.jsx":"7","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\DepartmentsList\\DepartmentsList.jsx":"8","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\EmployeesList\\EmployeesList.jsx":"9","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\Department\\Department.jsx":"10","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\EditEmployee\\EditEmployee.jsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":2325,"mtime":1618628074262,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1735,"mtime":1615943261521,"results":"16","hashOfConfig":"17"},{"size":2011,"mtime":1618728591970,"results":"18","hashOfConfig":"13"},{"size":358,"mtime":1618728591974,"results":"19","hashOfConfig":"13"},{"size":5411,"mtime":1618885825370,"results":"20","hashOfConfig":"13"},{"size":956,"mtime":1618728591970,"results":"21","hashOfConfig":"13"},{"size":925,"mtime":1618728591970,"results":"22","hashOfConfig":"13"},{"size":1447,"mtime":1618728591970,"results":"23","hashOfConfig":"13"},{"size":4454,"mtime":1618885821610,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"19tqry4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9n9c6q",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":15,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\index.js",[],["51","52"],"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\App.js",["53"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { browserHistory } from 'react-router';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Home from './components/Home/Home';\nimport DepartmentsList from './components/DepartmentsList/DepartmentsList';\nimport Department from './components/Department/Department';\nimport EmployeesList from './components/EmployeesList/EmployeesList';\nimport Employee from './components/Employee/Employee';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.sidebarSelectHandler = this.sidebarSelectHandler.bind(this);\n    this.employeeSelectHandler = this.employeeSelectHandler.bind(this);\n    this.departmentSelectHandler = this.departmentSelectHandler.bind(this);\n    this.state = {\n      linkSelection: 'home',\n      selectedEmployeeId: null,\n      selectedDepartmentId: null,\n    }\n  }\n\n  sidebarSelectHandler(selectedLink) {\n    this.setState({\n      linkSelection: selectedLink\n    });\n  }\n\n  employeeSelectHandler(selectedEmployeeId) {\n    this.setState({\n      linkSelection: 'employee',\n      selectedEmployeeId\n    });\n  }\n\n  departmentSelectHandler(selectedDepartmentId) {\n    this.setState({\n      linkSelection: 'department',\n      selectedDepartmentId\n    });\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Sidebar sidebarSelectHandler={this.sidebarSelectHandler} />\n        <div className='contentContainer'>\n\n          <Router>\n\n            <Route path='/home'>\n              <Home />\n            </Route>\n\n            <Route path ='/departments'>\n              <DepartmentsList departmentSelectHandler={this.departmentSelectHandler} />\n            </Route>\n\n            <Route path='/department'>\n              <Department id={this.state.selectedDepartmentId} employeeSelectHandler={this.employeeSelectHandler}/>\n            </Route>\n\n            <Route path='/employees'>\n              <EmployeesList employeeSelectHandler={this.employeeSelectHandler} />\n            </Route>\n\n            <Route path='/employee'>\n              <Employee id={this.state.selectedEmployeeId} />\n            </Route>\n\n\n            <Redirect to={this.state.linkSelection} />\n\n          </Router>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\reportWebVitals.js",[],"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\sidebar\\Sidebar.jsx",[],"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\Sidebar\\Sidebar.jsx",[],"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\Home\\Home.jsx",[],"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\Employee\\Employee.jsx",["54"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport EditEmployee from '../EditEmployee/EditEmployee'\r\nimport './Employee.css';\r\n\r\nclass Employee extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n        this.onEditClick = this.onEditClick.bind(this);\r\n        this.inputOnChange = this.inputOnChange.bind(this);\r\n        this.state = {\r\n            employee: null,\r\n            updatedEmployee: null,\r\n            departmentNameIds: [],\r\n            isEditMode: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data: employeeData } = await axios.get(`${process.env.PUBLIC_URL}/api/employees?id=${this.props.id}`);\r\n        const { data: departmentNameIds } = await axios.get(`${process.env.PUBLIC_URL}/api/departmentNameIds`);\r\n        this.setState({\r\n            employee: employeeData[0],\r\n            updatedEmployee: employeeData[0],\r\n            departmentNameIds\r\n        });\r\n    }\r\n\r\n    async onFormSubmit(formSubmitEvent) {\r\n        formSubmitEvent.preventDefault();\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy.departmentId = parseInt(employeeDeepCopy.departmentId);      \r\n        employeeDeepCopy.id = parseInt(employeeDeepCopy.id);\r\n        employeeDeepCopy.hireDate = new Date(employeeDeepCopy.hireDate).toISOString().split('T')[0];\r\n        \r\n        try {\r\n            const { data: employeePutReturned } = await axios.put(`${process.env.PUBLIC_URL}/api/employees?id=${this.state.updatedEmployee.id}`, employeeDeepCopy);           \r\n            this.setState({\r\n                employee: employeePutReturned[0],\r\n                updatedEmployee: employeePutReturned[0],\r\n                isEditMode: false\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n        };\r\n    }\r\n\r\n    onEditClick() {\r\n        this.setState({ isEditMode: true });\r\n    }\r\n\r\n    inputOnChange(changeEvent) {\r\n        const target = changeEvent.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy[target.id] = value;\r\n        this.setState({\r\n            updatedEmployee: employeeDeepCopy\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isEditMode, departmentNameIds, updatedEmployee, employee } = this.state;\r\n        const selectOptions = departmentNameIds.map(department => {\r\n            return <option value={department.id} selected={department.id === updatedEmployee.departmentId ? 'selected' : ''}>{department.name}</option>\r\n        })\r\n\r\n        return (\r\n            <>\r\n                {isEditMode ?\r\n                    <>\r\n<EditEmployee employee={this.state.employee} updateEmployeeFlag={true} createEmployeeFlag={false} />\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <div className='employeeHeader'>\r\n                            <h1 className='employeeNameHeader'>Employee</h1>\r\n                        </div>\r\n                        <div className='employeeButtonHeader'>\r\n                            <button onClick={this.onEditClick}>Edit Employee</button>\r\n                        </div>\r\n                        <div className='employeeBody'>\r\n                            <div className='employeeBodyName'>\r\n                                <h1>Name: </h1>\r\n                                <h1>{employee?.name}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyId'>\r\n                                <h1>Employee Id: </h1>\r\n                                <h1>{employee?.id}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyRole'>\r\n                                <h1>Role: </h1>\r\n                                <h1>{employee?.role}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyPhoneNumber'>\r\n                                <h1>Phone Number: </h1>\r\n                                <h1>{employee?.phoneNumber}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyEmailAddress'>\r\n                                <h1>Email Address: </h1>\r\n                                <h1>{employee?.emailAddress}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyDepartment'>\r\n                                <h1>Department: </h1>\r\n                                <h1>{employee?.departmentName}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyHireDate'>\r\n                                <h1>Hire Date: </h1>\r\n                                <h1>{new Date(employee?.hireDate).toLocaleDateString()}</h1><br />\r\n                            </div>\r\n\r\n                            <div className='employeeBodyIsSupervisor'>\r\n                                <h1>Supervisor?: </h1>\r\n                                <h1>{employee?.isSupervisor ? `YES` : `NO`}</h1><br />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee;\r\n","C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\DepartmentsList\\DepartmentsList.jsx",[],"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\EmployeesList\\EmployeesList.jsx",[],"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\Department\\Department.jsx",[],"C:\\CODE\\REACT\\directory-app\\employee-directory-web\\src\\components\\EditEmployee\\EditEmployee.jsx",["55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport './EditEmployee.css';\r\n\r\nclass EditEmployee extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n        this.inputOnChange = this.onInputChange.bind(this);\r\n        this.state = {\r\n            employee: this.props.employee,\r\n            updatedEmployee: null,\r\n            departmentNameIds: [],\r\n            updateEmployeeFlag: this.props.updateEmployeeFlag,\r\n            createEmployeeFlag: this.props.createEmployeeFlag\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.employee.id) {\r\n            const employeeData = await axios.get(`${process.env.PUBLIC_URL}/api/employees?id=${this.props.employee.id}`).data[0];\r\n        } else {\r\n            const employeeData = {};\r\n        }\r\n\r\n        const { data: departmentNameIds } = await axios.get(`${process.env.PUBLIC_URL}/api/departmentNameIds`);\r\n        this.setState({\r\n            employee: employeeData,\r\n            updatedEmployee: employeeData,\r\n            departmentNameIds\r\n        });\r\n    }\r\n\r\n    async onFormSubmit(formSubmitEvent) {\r\n        formSubmitEvent.preventDefault();\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy.departmentId = parseInt(employeeDeepCopy.departmentId);\r\n        employeeDeepCopy.id = parseInt(employeeDeepCopy.id);\r\n        employeeDeepCopy.hireDate = new Date(employeeDeepCopy.hireDate).toISOString().split('T')[0];\r\n\r\n        try {\r\n            const { data: employeePutReturned } = await axios.put(`${process.env.PUBLIC_URL}/api/employees?id=${this.state.updatedEmployee.id}`, employeeDeepCopy);\r\n            this.setState({\r\n                employee: employeePutReturned[0],\r\n                updatedEmployee: employeePutReturned[0],\r\n                isEditMode: false\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n        };\r\n    }\r\n\r\n    onInputChange(changeEvent) {\r\n        const target = changeEvent.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const employeeDeepCopy = JSON.parse(JSON.stringify(this.state.updatedEmployee));\r\n        employeeDeepCopy[target.id] = value;\r\n        this.setState({\r\n            updatedEmployee: employeeDeepCopy\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                <label for='employeeName'>Name:</label><br />\r\n                <input type='text' id='name' name='employeeName' value={updatedEmployee.name ? updatedEmployee.name : null} onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <label for='employeeRole'>Role:</label><br />\r\n                <input type='text' id='role' name='employeeRole' value={updatedEmployee.role ? updatedEmployee.role: null} onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <label for='phoneNumber'>Phone Number:</label><br />\r\n                <input type='text' id='phoneNumber' name='phoneNumber' value={updatedEmployee.phoneNumber ? updatedEmployee.phoneNumber : null} onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <label for='emailAddress'>Email Address:</label><br />\r\n                <input type='text' id='emailAddress' name='emailAddress' value={updatedEmployee.emailAddress ? updatedEmployee.emailAddress : null} onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <label for='employeeDepartment'>Department:</label><br />\r\n                <select id='departmentId' name='EmployeeDepartment' value={updatedEmployee.departmentId ? updatedEmployee.departmentId : null} onChange={(e) => this.onInputChange(e)} >\r\n                    {selectOptions}\r\n                </select>\r\n\r\n                <input type='checkbox' id='isSupervisor' name='supervisor' checked={updatedEmployee.isSupervisor ? updatedEmployee.isSupervisor : null} onChange={(e) => this.onInputChange(e)} />\r\n                <label for='isSupervisor'>Supervisor</label><br />\r\n\r\n                <label for='hireDate'>Hire Date:</label><br />\r\n                <input type='date' id='hireDate' name='employeeHireDate' onChange={(e) => this.onInputChange(e)} /><br />\r\n\r\n                <br /><input type='submit' id='editSubmit' name='editSubmit' value='Submit' />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditEmployee;\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":24},{"ruleId":"76","severity":1,"message":"80","line":65,"column":15,"nodeType":"78","messageId":"79","endLine":65,"endColumn":28},{"ruleId":"76","severity":1,"message":"81","line":21,"column":19,"nodeType":"78","messageId":"79","endLine":21,"endColumn":31},{"ruleId":"76","severity":1,"message":"81","line":23,"column":19,"nodeType":"78","messageId":"79","endLine":23,"endColumn":31},{"ruleId":"82","severity":2,"message":"83","line":28,"column":23,"nodeType":"78","messageId":"84","endLine":28,"endColumn":35},{"ruleId":"82","severity":2,"message":"83","line":29,"column":30,"nodeType":"78","messageId":"84","endLine":29,"endColumn":42},{"ruleId":"82","severity":2,"message":"85","line":67,"column":73,"nodeType":"78","messageId":"84","endLine":67,"endColumn":88},{"ruleId":"82","severity":2,"message":"85","line":67,"column":96,"nodeType":"78","messageId":"84","endLine":67,"endColumn":111},{"ruleId":"82","severity":2,"message":"85","line":70,"column":73,"nodeType":"78","messageId":"84","endLine":70,"endColumn":88},{"ruleId":"82","severity":2,"message":"85","line":70,"column":96,"nodeType":"78","messageId":"84","endLine":70,"endColumn":111},{"ruleId":"82","severity":2,"message":"85","line":73,"column":79,"nodeType":"78","messageId":"84","endLine":73,"endColumn":94},{"ruleId":"82","severity":2,"message":"85","line":73,"column":109,"nodeType":"78","messageId":"84","endLine":73,"endColumn":124},{"ruleId":"82","severity":2,"message":"85","line":76,"column":81,"nodeType":"78","messageId":"84","endLine":76,"endColumn":96},{"ruleId":"82","severity":2,"message":"85","line":76,"column":112,"nodeType":"78","messageId":"84","endLine":76,"endColumn":127},{"ruleId":"82","severity":2,"message":"85","line":79,"column":76,"nodeType":"78","messageId":"84","endLine":79,"endColumn":91},{"ruleId":"82","severity":2,"message":"85","line":79,"column":107,"nodeType":"78","messageId":"84","endLine":79,"endColumn":122},{"ruleId":"82","severity":2,"message":"86","line":80,"column":22,"nodeType":"78","messageId":"84","endLine":80,"endColumn":35},{"ruleId":"82","severity":2,"message":"85","line":83,"column":85,"nodeType":"78","messageId":"84","endLine":83,"endColumn":100},{"ruleId":"82","severity":2,"message":"85","line":83,"column":116,"nodeType":"78","messageId":"84","endLine":83,"endColumn":131},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'browserHistory' is defined but never used.","Identifier","unusedVar","'selectOptions' is assigned a value but never used.","'employeeData' is assigned a value but never used.","no-undef","'employeeData' is not defined.","undef","'updatedEmployee' is not defined.","'selectOptions' is not defined.","no-global-assign","no-unsafe-negation"]